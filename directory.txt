/bingo-game
│── .next/                            # npm run devでなんか生成される
│── node_modules/                     # npm installで追加されるモジュールたち
│── public/                           # 静的ファイル（例: ファビコン、画像）
│── src/
│   ├── app/                          # Next.js App Router
│   │   ├── favicon.ico               # ファビコン。
│   │   ├── globals.css               # Tailwind css使うよ！みたいなこと書いてある（ごめんよく分かってない）
│   │   ├── layout.tsx                # すべてのファイルに適用するスタイル？（ごめんよく分かってない）
│   │   ├── page.tsx                  # 一番最初に表示されるページ
│   │   ├── api/                      # APIルート（サーバーサイド処理を記述）
│   │   │   ├── undefined             # 新しいゲームルームを作成する
│   │   │   ├── undefined             # 参加者登録、ビンゴカードを生成する
│   │   │   ├── undefined             # ビンゴの抽選
│   │   │   └── undefined             # 各プレイヤーのビンゴカードを走査。確率等を計算
│   │   ├── custom/
│   │   │   ├── page.tsx/             # 新しいゲームルームを作成する
│   │   │   └── any.tsx               # <!-- message: 作ったコンポーネントで、単一ページでしか使用しないものは同階層においてね -->
│   │   ├── gameroom/                 # ゲーム画面
│   │   │   └──[roomId]/              # 動的ルーティング（roomIdによって異なるページ）
│   │   │       ├── host/
│   │   │       │   ├── page.tsx      # 開催者ゲーム画面
│   │   │       │   └── any.tsx       # 作ったコンポーネントで、単一ページでしか使用しないものは同階層においてね
│   │   │       └──[playerName]/      # 動的ルーティング（playerNameによって異なるページ）
│   │   │           ├── signin/
│   │   │           │   └── page.tsx  # 参加者名前入力画面
│   │   │           └── playing/
│   │   │               └── page.tsx  # 参加者ゲーム画面
│   │   ├── modeselect/
│   │   │   └── page.tsx/             # モード選択画面
│   │   └── result.tsx/
│   │       └── page.tsx/             # リザルト画面
│   ├── components/                   # UIコンポーネント
│   │   ├── layouts/
│   │   │   └── any.tsx/              # 作ったコンポーネントで、複数ページで使うもの
│   │   ├── ui/                       # shadcn/uiベースのUI部品
│   │   │   ├── button.tsx/
│   │   │   ├── input.tsx/
│   │   │   ├── select.tsx/
│   │   │   ├── toggle.tsx/
│   │   │   └── toggle-group.tsx/
│   │   ├── game/                     # ゲーム専用コンポーネント
│   │   ├── layouts/                  # uiたちをを組み合わせて作ったコンポーネントがあれば
│   │   └── animations/               # アニメーション（例: ビンゴ演出）
│   ├── lib/                          # 共通ライブラリ・ヘルパー関数
│   │   ├── firebase.ts               # Firestore関連関数
│   │   └── utils.ts                  # 汎用ユーティリティ（よくわからん）
│   ├── styles/                       # とりあえず置いてる
│   ├── types/                        # 型定義（TypeScript）
│   │   └── any.ts
│   └── utils/                        #（よくわからん）
│       └── fonts.ts                  # グーグルフォントを定義させてる
│── firebase/                         # Firebase設定・初期化
│   ├── firestore.rules               # Firestoreのセキュリティルール
│   ├── firebase.json                 # Firebaseの設定ファイル
│   └── init.ts                       # Firebase初期化スクリプト
│── .env.local                        # 環境変数ファイル（ローカル用）
│── .gitignore                        # gitで管理しないファイルを書くよ
│── .prettierrc                       # prettireの設定を書いてあるよ
│── components.json                   # shadcn/uiをインストールしたら増えたよ
│── directory.txt                     # このファイル。フォルダー・ファイルの置き場を確認してね
│── eslint.config.mjs                 # ESLintの設定ファイルを書いてあるよ
│── next-env.d.ts                     # なんだこれ（迫真）
│── next.config.js                    # Next.js設定
│── package-lock.json                 # ごめんよく知らない
│── package.json                      # 依存関係管理（必要なnodemoduleが書かれてるよ）
│── postcss.config.mjs                # Tailwind CSSのためになんか追加された
│── README.md                         # プロジェクト概要
│── tsconfig.json                     # なにこれ